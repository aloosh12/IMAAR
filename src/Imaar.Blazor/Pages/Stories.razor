

@page "/stories"

@attribute [Authorize(ImaarPermissions.Stories.Default)]
@using Imaar.Stories
@using Imaar.Localization
@using Imaar.Shared
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Components.Web
@using Blazorise
@using Blazorise.Components
@using Blazorise.DataGrid
@using Volo.Abp.BlazoriseUI
@using Volo.Abp.BlazoriseUI.Components
@using Volo.Abp.ObjectMapping
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout

@using Imaar.Permissions
@using Volo.Abp.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components
@using Volo.Abp.Http.Client
@inherits ImaarComponentBase
@inject IStoriesAppService StoriesAppService

@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<ImaarResource> LH
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["Stories"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>
@*//<suite-custom-code-block-1>*@
@*//</suite-custom-code-block-1>*@
        <Row>
            <div class="col-md-8 col-lg-10">
                <div class="mb-3">
                    <Form id="StorySearchForm">
                        <Addons>
                            <Addon AddonType="AddonType.Body">
                                <TextEdit @bind-Text="@Filter.FilterText"
                                        Autofocus="true"
                                        Placeholder="@L["Search"]">
                                </TextEdit>
                            </Addon>
                            <Addon AddonType="AddonType.End">
                                <SubmitButton Form="StorySearchForm" Clicked="GetStoriesAsync">
                                    <Icon Name="IconName.Search" Class="me-1"></Icon>@L["Search"]
                                </SubmitButton>
                            </Addon>
                        </Addons>
                    </Form>
                </div>
            </div>
                
                   <div class="col-md-4 col-lg-2">
            <div class="mb-3">
               <Button Color="Color.Primary" Outline Style="width:100%" id="AdvancedFilterSectionToggler"
                         Clicked="@(() => ShowAdvancedFilters = !ShowAdvancedFilters)">@L["Filters"]
                         <i aria-hidden="true" class="fa ms-1 @(!ShowAdvancedFilters ? "fa-angle-down" : "fa-angle-up")"></i>
               </Button>
            </div>
       </div>
        
        <div style="display: @(!ShowAdvancedFilters ? "none" : "block")"  class="mt-3">
            <Row>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["Title"]</FieldLabel>
                        <TextEdit Text="@Filter.Title" TextChanged="@OnTitleChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinFromTime"]</FieldLabel>
                        <DatePicker TValue="DateTime?"
            InputMode="DateInputMode.Date"
            Date="@Filter.FromTimeMin"
            DateChanged="@OnFromTimeMinChangedAsync"
            Placeholder="@string.Empty" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxFromTime"]</FieldLabel>
                        <DatePicker TValue="DateTime?"
            InputMode="DateInputMode.Date"
            Date="@Filter.FromTimeMax"
            DateChanged="@OnFromTimeMaxChangedAsync"
            Placeholder="@string.Empty" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinExpiryTime"]</FieldLabel>
                        <DatePicker TValue="DateTime?"
            InputMode="DateInputMode.Date"
            Date="@Filter.ExpiryTimeMin"
            DateChanged="@OnExpiryTimeMinChangedAsync"
            Placeholder="@string.Empty" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxExpiryTime"]</FieldLabel>
                        <DatePicker TValue="DateTime?"
            InputMode="DateInputMode.Date"
            Date="@Filter.ExpiryTimeMax"
            DateChanged="@OnExpiryTimeMaxChangedAsync"
            Placeholder="@string.Empty" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["UserProfile"]</FieldLabel>
                        <Select TValue="Guid?"
		SelectedValue="@Filter.StoryPublisherId"
		SelectedValueChanged="@OnStoryPublisherIdChangedAsync">

<SelectItem></SelectItem>

@foreach(var item in UserProfilesCollection)
{
	<SelectItem TValue="Guid?" Value="@item.Id">
		@item.DisplayName
	</SelectItem>
}

</Select>                       
                    </Field>
                </Column>
            </Row>
@*//<suite-custom-code-block-2>*@
@*//</suite-custom-code-block-2>*@
        </div>

        </Row>

@*//<suite-custom-code-block-3>*@
@*//</suite-custom-code-block-3>*@
    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<Card>
    <CardBody>        
        @if (SelectedStories.Any())
        {
            <div class="d-flex justify-content-between align-items-center mb-2">
                @if (AllStoriesSelected)
                {
                    <p class="lead mb-0">
                        @L["AllItemsAreSelected", TotalCount]
                    </p>
                }
                else
                {
                    <p class="lead mb-0">
                        @if (SelectedStories.Count > 1)
                        {
                            @L["NumberOfItemsOnThisPageAreSelected", SelectedStories.Count]
                        }
                        else
                        {
                            @L["OneItemOnThisPageIsSelected"]
                        }
                    </p>
                }
                    
                <div>
                    @if ((SelectedStories.Count == PageSize || SelectedStories.Count == StoryList.Count) && TotalCount > SelectedStories.Count)
                    {
                        if (!AllStoriesSelected)
                        {
                            <Button Clicked="SelectAllItems" Class="mx-1 btn-outline-secondary">@L["SelectAllItems", TotalCount]</Button>
                        }
                        else
                        {
                            <Button Clicked="ClearSelection" Class="mx-1 btn-outline-secondary">@L["ClearSelection"]</Button>
                        }
                    }
                    
                    <Button Color="Color.Danger" Class="mx-1" Size="Size.Medium" Clicked="DeleteSelectedStoriesAsync">
                        <Icon Name="@IconName.Delete" /> @L["Delete"]
                    </Button>
                </div>
            </div>
            
            <hr class="my-1 mx-0"/>
        }
        <DataGrid TItem="StoryWithNavigationPropertiesDto"
                  Data="StoryList"
                  
                  SelectionMode="DataGridSelectionMode.Multiple"
                  SelectedRows="SelectedStories"
                  RowSelectable="@((args) => CanDeleteStory)"
                  SelectedRowsChanged="SelectedStoryRowsChanged"
                  
                  
                  
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  Responsive="true"
                  PageSize="PageSize"
                  Class="datagrid-detail">
            <LoadingTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                       <RadarSpinner />
                    </Column>
                </Row>
            </LoadingTemplate>
            <EmptyTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                        <Heading Size="HeadingSize.Is4" TextAlignment="TextAlignment.Center">@L["NoDataAvailable"]</Heading>
                    </Column>
                </Row>
            </EmptyTemplate>   
            <DataGridColumns>
                
                @if (CanDeleteStory && StoryList.Any())
                {
                    <DataGridMultiSelectColumn TItem="StoryWithNavigationPropertiesDto" DisplayOrder="-1" Width="30px"></DataGridMultiSelectColumn>
                }
                
                <DataGridEntityActionsColumn TItem="StoryWithNavigationPropertiesDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="StoryWithNavigationPropertiesDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="StoryWithNavigationPropertiesDto"
                                          Visible="@CanEditStory"
                                          Clicked="async () => await OpenEditStoryModalAsync(context)"
                                          Text="@L["Edit"]"></EntityAction>
                            <EntityAction TItem="StoryWithNavigationPropertiesDto"
                                          Visible="@CanDeleteStory"
                                          Clicked="() => DeleteStoryAsync(context)"
                                          ConfirmationMessage="@(()=> L["DeleteConfirmationMessage"])"
                                          Text="@L["Delete"]"></EntityAction>
@*//<suite-custom-code-block-4>*@
@*//</suite-custom-code-block-4>*@
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>
               
              <DataGridColumn TItem="StoryWithNavigationPropertiesDto"
                      Field="Story.Title"
                      Caption="@L["Title"]">
              </DataGridColumn>

              <DataGridColumn TItem="StoryWithNavigationPropertiesDto"
                      Field="Story.FromTime"
                      Caption="@L["FromTime"]">
                  <DisplayTemplate>
                        @context.Story.FromTime.ToShortDateString()
                  </DisplayTemplate>
              </DataGridColumn>

              <DataGridColumn TItem="StoryWithNavigationPropertiesDto"
                      Field="Story.ExpiryTime"
                      Caption="@L["ExpiryTime"]">
                  <DisplayTemplate>
                        @context.Story.ExpiryTime.ToShortDateString()
                  </DisplayTemplate>
              </DataGridColumn>

              <DataGridColumn TItem="StoryWithNavigationPropertiesDto"
                      Field="StoryPublisher.SecurityNumber"
                      Caption="@L["StoryPublisher"]">
              </DataGridColumn>

            </DataGridColumns>
            
            
        </DataGrid>
    </CardBody>
</Card>

@* ************************* CREATE MODAL ************************* *@
<Modal @ref="CreateStoryModal" Closing="@CreateStoryModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
@*//<suite-custom-code-block-5>*@
@*//</suite-custom-code-block-5>*@
        <Form id="CreateStoryForm">
            <ModalHeader>
                <ModalTitle>@L["NewStory"]</ModalTitle>
                <CloseButton Clicked="CloseCreateStoryModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@NewStoryValidations"
                            Mode="ValidationMode.Auto"
                            Model="@NewStory"
                            ValidateOnLoad="false">
                    
                    
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Title"]</FieldLabel>
                            <TextEdit @bind-Text="@NewStory.Title"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["FromTime"]</FieldLabel>
                            <DateEdit TValue="DateTime" InputMode="DateInputMode.Date" @bind-Date="@NewStory.FromTime" >
                               <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </DateEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["ExpiryTime"]</FieldLabel>
                            <DateEdit TValue="DateTime" InputMode="DateInputMode.Date" @bind-Date="@NewStory.ExpiryTime" >
                               <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </DateEdit>
                        </Field>
                    </Validation>


                    <Field>
                        <FieldLabel>@L["UserProfile"]</FieldLabel>
                        <Select TValue="Guid?" @bind-SelectedValue="@NewStory.StoryPublisherId">
                            <SelectItem TValue="Guid?" Value="null"></SelectItem>
                            @foreach (var userProfile in UserProfilesCollection)
                            {
                                <SelectItem TValue="Guid?" Value="@(userProfile.Id)">
                                    @(userProfile.DisplayName)
                                </SelectItem>
                            }
                        </Select>
                    </Field>


                    
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateStoryModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreateStoryForm" Clicked="CreateStoryAsync"/>
@*//<suite-custom-code-block-6>*@
@*//</suite-custom-code-block-6>*@
            </ModalFooter>
        </Form>
@*//<suite-custom-code-block-7>*@
@*//</suite-custom-code-block-7>*@
    </ModalContent>
</Modal>

@* ************************* EDIT MODAL ************************* *@
<Modal @ref="EditStoryModal" Closing="@EditStoryModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
@*//<suite-custom-code-block-8>*@
@*//</suite-custom-code-block-8>*@
        <Form id="EditStoryForm">
            <ModalHeader>
                <ModalTitle>@L["Update"]</ModalTitle>
                <CloseButton Clicked="CloseEditStoryModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditingStoryValidations"
                            Mode="ValidationMode.Auto"
                            Model="@EditingStory"
                            ValidateOnLoad="false">
                    
                    
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Title"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingStory.Title"  >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["FromTime"]</FieldLabel>
                            <DateEdit TValue="DateTime" InputMode="DateInputMode.Date" @bind-Date="@EditingStory.FromTime" >
                               <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </DateEdit>
                        </Field>
                    </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["ExpiryTime"]</FieldLabel>
                            <DateEdit TValue="DateTime" InputMode="DateInputMode.Date" @bind-Date="@EditingStory.ExpiryTime" >
                               <Feedback>
                                    <ValidationError />
                                </Feedback>
                            </DateEdit>
                        </Field>
                    </Validation>


                    <Field>
                        <FieldLabel>@L["UserProfile"]</FieldLabel>
                        <Select TValue="Guid?" @bind-SelectedValue="@EditingStory.StoryPublisherId">
                            <SelectItem TValue="Guid?" Value="null"></SelectItem>
                            @foreach (var userProfile in UserProfilesCollection)
                            {
                                <SelectItem TValue="Guid?" Value="@(userProfile.Id)">
                                    @(userProfile.DisplayName)
                                </SelectItem>
                            }
                        </Select>
                    </Field>


                    
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditStoryModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="EditStoryForm" Clicked="UpdateStoryAsync" />
@*//<suite-custom-code-block-9>*@
@*//</suite-custom-code-block-9>*@
            </ModalFooter>
        </Form>
@*//<suite-custom-code-block-10>*@
@*//</suite-custom-code-block-10>*@
    </ModalContent>
</Modal>

