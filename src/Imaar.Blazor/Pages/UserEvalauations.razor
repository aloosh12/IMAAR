

@page "/userEvalauations"

@attribute [Authorize(ImaarPermissions.UserEvalauations.Default)]
@using Imaar.UserEvalauations
@using Imaar.Localization
@using Imaar.Shared
@using Microsoft.AspNetCore.Authorization
@using Microsoft.Extensions.Localization
@using Microsoft.AspNetCore.Components.Web
@using Blazorise
@using Blazorise.Components
@using Blazorise.DataGrid
@using Volo.Abp.BlazoriseUI
@using Volo.Abp.BlazoriseUI.Components
@using Volo.Abp.ObjectMapping
@using Volo.Abp.AspNetCore.Components.Messages
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout

@using Imaar.Permissions
@using Volo.Abp.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components
@using Volo.Abp.Http.Client
@inherits ImaarComponentBase
@inject IUserEvalauationsAppService UserEvalauationsAppService

@inject IUiMessageService UiMessageService
@inject AbpBlazorMessageLocalizerHelper<ImaarResource> LH
@inject IRemoteServiceConfigurationProvider RemoteServiceConfigurationProvider
@inject NavigationManager NavigationManager

@* ************************* PAGE HEADER ************************* *@
<PageHeader Title="@L["UserEvalauations"]" BreadcrumbItems="BreadcrumbItems" Toolbar="Toolbar">

</PageHeader>

@* ************************* SEARCH ************************* *@
<Card>
    <CardBody>
@*//<suite-custom-code-block-1>*@
@*//</suite-custom-code-block-1>*@
        <Row>
            <div class="col-md-8 col-lg-10">
                <div class="mb-3">
                    <Form id="UserEvalauationSearchForm">
                        <Addons>
                            <Addon AddonType="AddonType.Body">
                                <TextEdit @bind-Text="@Filter.FilterText"
                                        Autofocus="true"
                                        Placeholder="@L["Search"]">
                                </TextEdit>
                            </Addon>
                            <Addon AddonType="AddonType.End">
                                <SubmitButton Form="UserEvalauationSearchForm" Clicked="GetUserEvalauationsAsync">
                                    <Icon Name="IconName.Search" Class="me-1"></Icon>@L["Search"]
                                </SubmitButton>
                            </Addon>
                        </Addons>
                    </Form>
                </div>
            </div>
                
                   <div class="col-md-4 col-lg-2">
            <div class="mb-3">
               <Button Color="Color.Primary" Outline Style="width:100%" id="AdvancedFilterSectionToggler"
                         Clicked="@(() => ShowAdvancedFilters = !ShowAdvancedFilters)">@L["Filters"]
                         <i aria-hidden="true" class="fa ms-1 @(!ShowAdvancedFilters ? "fa-angle-down" : "fa-angle-up")"></i>
               </Button>
            </div>
       </div>
        
        <div style="display: @(!ShowAdvancedFilters ? "none" : "block")"  class="mt-3">
            <Row>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinSpeedOfCompletion"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.SpeedOfCompletionMin"
             ValueChanged="@OnSpeedOfCompletionMinChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxSpeedOfCompletion"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.SpeedOfCompletionMax"
             ValueChanged="@OnSpeedOfCompletionMaxChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinDealing"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.DealingMin"
             ValueChanged="@OnDealingMinChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxDealing"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.DealingMax"
             ValueChanged="@OnDealingMaxChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinCleanliness"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.CleanlinessMin"
             ValueChanged="@OnCleanlinessMinChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxCleanliness"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.CleanlinessMax"
             ValueChanged="@OnCleanlinessMaxChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinPerfection"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.PerfectionMin"
             ValueChanged="@OnPerfectionMinChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxPerfection"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.PerfectionMax"
             ValueChanged="@OnPerfectionMaxChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MinPrice"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.PriceMin"
             ValueChanged="@OnPriceMinChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["MaxPrice"]</FieldLabel>
                        <NumericEdit TValue="int?" 
             Value="@Filter.PriceMax"
             ValueChanged="@OnPriceMaxChangedAsync" />                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["UserProfile"]</FieldLabel>
                        <Select TValue="Guid?"
		SelectedValue="@Filter.Evaluatord"
		SelectedValueChanged="@OnEvaluatordChangedAsync">

<SelectItem></SelectItem>

@foreach(var item in UserProfilesCollection)
{
	<SelectItem TValue="Guid" Value="@item.Id">
		@item.DisplayName
	</SelectItem>
}

</Select>                       
                    </Field>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Field>
                        <FieldLabel>@L["UserProfile"]</FieldLabel>
                        <Select TValue="Guid?"
		SelectedValue="@Filter.EvaluatedPersonId"
		SelectedValueChanged="@OnEvaluatedPersonIdChangedAsync">

<SelectItem></SelectItem>

@foreach(var item in UserProfilesCollection)
{
	<SelectItem TValue="Guid" Value="@item.Id">
		@item.DisplayName
	</SelectItem>
}

</Select>                       
                    </Field>
                </Column>
            </Row>
@*//<suite-custom-code-block-2>*@
@*//</suite-custom-code-block-2>*@
        </div>

        </Row>

@*//<suite-custom-code-block-3>*@
@*//</suite-custom-code-block-3>*@
    </CardBody>
</Card>

@* ************************* DATA GRID ************************* *@
<Card>
    <CardBody>        
        @if (SelectedUserEvalauations.Any())
        {
            <div class="d-flex justify-content-between align-items-center mb-2">
                @if (AllUserEvalauationsSelected)
                {
                    <p class="lead mb-0">
                        @L["AllItemsAreSelected", TotalCount]
                    </p>
                }
                else
                {
                    <p class="lead mb-0">
                        @if (SelectedUserEvalauations.Count > 1)
                        {
                            @L["NumberOfItemsOnThisPageAreSelected", SelectedUserEvalauations.Count]
                        }
                        else
                        {
                            @L["OneItemOnThisPageIsSelected"]
                        }
                    </p>
                }
                    
                <div>
                    @if ((SelectedUserEvalauations.Count == PageSize || SelectedUserEvalauations.Count == UserEvalauationList.Count) && TotalCount > SelectedUserEvalauations.Count)
                    {
                        if (!AllUserEvalauationsSelected)
                        {
                            <Button Clicked="SelectAllItems" Class="mx-1 btn-outline-secondary">@L["SelectAllItems", TotalCount]</Button>
                        }
                        else
                        {
                            <Button Clicked="ClearSelection" Class="mx-1 btn-outline-secondary">@L["ClearSelection"]</Button>
                        }
                    }
                    
                    <Button Color="Color.Danger" Class="mx-1" Size="Size.Medium" Clicked="DeleteSelectedUserEvalauationsAsync">
                        <Icon Name="@IconName.Delete" /> @L["Delete"]
                    </Button>
                </div>
            </div>
            
            <hr class="my-1 mx-0"/>
        }
        <DataGrid TItem="UserEvalauationWithNavigationPropertiesDto"
                  Data="UserEvalauationList"
                  
                  SelectionMode="DataGridSelectionMode.Multiple"
                  SelectedRows="SelectedUserEvalauations"
                  RowSelectable="@((args) => CanDeleteUserEvalauation)"
                  SelectedRowsChanged="SelectedUserEvalauationRowsChanged"
                  
                  
                  
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  Responsive="true"
                  PageSize="PageSize"
                  Class="datagrid-detail">
            <LoadingTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                       <RadarSpinner />
                    </Column>
                </Row>
            </LoadingTemplate>
            <EmptyTemplate>
                <Row Class="w-100 align-items-center" Style="height: 150px;">
                    <Column>
                        <Heading Size="HeadingSize.Is4" TextAlignment="TextAlignment.Center">@L["NoDataAvailable"]</Heading>
                    </Column>
                </Row>
            </EmptyTemplate>   
            <DataGridColumns>
                
                @if (CanDeleteUserEvalauation && UserEvalauationList.Any())
                {
                    <DataGridMultiSelectColumn TItem="UserEvalauationWithNavigationPropertiesDto" DisplayOrder="-1" Width="30px"></DataGridMultiSelectColumn>
                }
                
                <DataGridEntityActionsColumn TItem="UserEvalauationWithNavigationPropertiesDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="UserEvalauationWithNavigationPropertiesDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="UserEvalauationWithNavigationPropertiesDto"
                                          Visible="@CanEditUserEvalauation"
                                          Clicked="async () => await OpenEditUserEvalauationModalAsync(context)"
                                          Text="@L["Edit"]"></EntityAction>
                            <EntityAction TItem="UserEvalauationWithNavigationPropertiesDto"
                                          Visible="@CanDeleteUserEvalauation"
                                          Clicked="() => DeleteUserEvalauationAsync(context)"
                                          ConfirmationMessage="@(()=> L["DeleteConfirmationMessage"])"
                                          Text="@L["Delete"]"></EntityAction>
@*//<suite-custom-code-block-4>*@
@*//</suite-custom-code-block-4>*@
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>
               
              <DataGridColumn TItem="UserEvalauationWithNavigationPropertiesDto"
                      Field="UserEvalauation.SpeedOfCompletion"
                      Caption="@L["SpeedOfCompletion"]">
              </DataGridColumn>

              <DataGridColumn TItem="UserEvalauationWithNavigationPropertiesDto"
                      Field="UserEvalauation.Dealing"
                      Caption="@L["Dealing"]">
              </DataGridColumn>

              <DataGridColumn TItem="UserEvalauationWithNavigationPropertiesDto"
                      Field="UserEvalauation.Cleanliness"
                      Caption="@L["Cleanliness"]">
              </DataGridColumn>

              <DataGridColumn TItem="UserEvalauationWithNavigationPropertiesDto"
                      Field="UserEvalauation.Perfection"
                      Caption="@L["Perfection"]">
              </DataGridColumn>

              <DataGridColumn TItem="UserEvalauationWithNavigationPropertiesDto"
                      Field="UserEvalauation.Price"
                      Caption="@L["Price"]">
              </DataGridColumn>

              <DataGridColumn TItem="UserEvalauationWithNavigationPropertiesDto"
                      Field="Evaluatord.SecurityNumber"
                      Caption="@L["Evaluatord"]">
              </DataGridColumn>

              <DataGridColumn TItem="UserEvalauationWithNavigationPropertiesDto"
                      Field="EvaluatedPerson.SecurityNumber"
                      Caption="@L["EvaluatedPerson"]">
              </DataGridColumn>

            </DataGridColumns>
            
            
        </DataGrid>
    </CardBody>
</Card>

@* ************************* CREATE MODAL ************************* *@
<Modal @ref="CreateUserEvalauationModal" Closing="@CreateUserEvalauationModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
@*//<suite-custom-code-block-5>*@
@*//</suite-custom-code-block-5>*@
        <Form id="CreateUserEvalauationForm">
            <ModalHeader>
                <ModalTitle>@L["NewUserEvalauation"]</ModalTitle>
                <CloseButton Clicked="CloseCreateUserEvalauationModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@NewUserEvalauationValidations"
                            Mode="ValidationMode.Auto"
                            Model="@NewUserEvalauation"
                            ValidateOnLoad="false">
                    
                    
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["SpeedOfCompletion"]</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@NewUserEvalauation.SpeedOfCompletion"  Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Dealing"]</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@NewUserEvalauation.Dealing"  Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Cleanliness"]</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@NewUserEvalauation.Cleanliness"  Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Perfection"]</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@NewUserEvalauation.Perfection"  Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Price"]</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@NewUserEvalauation.Price"  Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Field>
                        <FieldLabel>@L["UserProfile"]</FieldLabel>
                        <Select TValue="Guid" @bind-SelectedValue="@NewUserEvalauation.Evaluatord">
                            @foreach (var userProfile in UserProfilesCollection)
                            {
                                <SelectItem TValue="Guid" Value="@(userProfile.Id)">
                                    @(userProfile.DisplayName)
                                </SelectItem>
                            }
                        </Select>
                    </Field>


                    <Field>
                        <FieldLabel>@L["UserProfile"]</FieldLabel>
                        <Select TValue="Guid" @bind-SelectedValue="@NewUserEvalauation.EvaluatedPersonId">
                            @foreach (var userProfile in UserProfilesCollection)
                            {
                                <SelectItem TValue="Guid" Value="@(userProfile.Id)">
                                    @(userProfile.DisplayName)
                                </SelectItem>
                            }
                        </Select>
                    </Field>


                    
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateUserEvalauationModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="CreateUserEvalauationForm" Clicked="CreateUserEvalauationAsync"/>
@*//<suite-custom-code-block-6>*@
@*//</suite-custom-code-block-6>*@
            </ModalFooter>
        </Form>
@*//<suite-custom-code-block-7>*@
@*//</suite-custom-code-block-7>*@
    </ModalContent>
</Modal>

@* ************************* EDIT MODAL ************************* *@
<Modal @ref="EditUserEvalauationModal" Closing="@EditUserEvalauationModal.CancelClosingModalWhenFocusLost">
    <ModalContent Centered="true">
@*//<suite-custom-code-block-8>*@
@*//</suite-custom-code-block-8>*@
        <Form id="EditUserEvalauationForm">
            <ModalHeader>
                <ModalTitle>@L["Update"]</ModalTitle>
                <CloseButton Clicked="CloseEditUserEvalauationModalAsync" />
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditingUserEvalauationValidations"
                            Mode="ValidationMode.Auto"
                            Model="@EditingUserEvalauation"
                            ValidateOnLoad="false">
                    
                    
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["SpeedOfCompletion"]</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@EditingUserEvalauation.SpeedOfCompletion"  Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Dealing"]</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@EditingUserEvalauation.Dealing"  Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Cleanliness"]</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@EditingUserEvalauation.Cleanliness"  Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Perfection"]</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@EditingUserEvalauation.Perfection"  Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Price"]</FieldLabel>
                            <NumericPicker TValue="int" @bind-Value="@EditingUserEvalauation.Price"  Decimals="0" >
                                <Feedback>
                                    <ValidationError />
                                </Feedback>
                             </NumericPicker>
                        </Field>
                     </Validation>


                    <Field>
                        <FieldLabel>@L["UserProfile"]</FieldLabel>
                        <Select TValue="Guid" @bind-SelectedValue="@EditingUserEvalauation.Evaluatord">
                            @foreach (var userProfile in UserProfilesCollection)
                            {
                                <SelectItem TValue="Guid" Value="@(userProfile.Id)">
                                    @(userProfile.DisplayName)
                                </SelectItem>
                            }
                        </Select>
                    </Field>


                    <Field>
                        <FieldLabel>@L["UserProfile"]</FieldLabel>
                        <Select TValue="Guid" @bind-SelectedValue="@EditingUserEvalauation.EvaluatedPersonId">
                            @foreach (var userProfile in UserProfilesCollection)
                            {
                                <SelectItem TValue="Guid" Value="@(userProfile.Id)">
                                    @(userProfile.DisplayName)
                                </SelectItem>
                            }
                        </Select>
                    </Field>


                    
                    
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditUserEvalauationModalAsync">
                    @L["Cancel"]
                </Button>
                <SubmitButton Form="EditUserEvalauationForm" Clicked="UpdateUserEvalauationAsync" />
@*//<suite-custom-code-block-9>*@
@*//</suite-custom-code-block-9>*@
            </ModalFooter>
        </Form>
@*//<suite-custom-code-block-10>*@
@*//</suite-custom-code-block-10>*@
    </ModalContent>
</Modal>

