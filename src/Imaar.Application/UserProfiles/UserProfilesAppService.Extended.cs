using System;
using System.IO;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Linq.Dynamic.Core;
using Microsoft.AspNetCore.Authorization;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.Application.Services;
using Volo.Abp.Domain.Repositories;
using Imaar.Permissions;
using Imaar.UserProfiles;
using MiniExcelLibs;
using Volo.Abp.Content;
using Volo.Abp.Authorization;
using Volo.Abp.Caching;
using Microsoft.Extensions.Caching.Distributed;
using Imaar.Shared;
using Volo.Abp.Identity;
using Imaar.Authorizations;
using Imaar.MobileResponses;

namespace Imaar.UserProfiles
{
    public class UserProfilesAppService : UserProfilesAppServiceBase, IUserProfilesAppService
    {
        //<suite-custom-code-autogenerated>
        public UserProfilesAppService(IUserProfileRepository userProfileRepository, UserProfileManager userProfileManager, UserManager userManager,  IDistributedCache<UserProfileDownloadTokenCacheItem, string> downloadTokenCache)
            : base(userProfileRepository, userProfileManager, userManager, downloadTokenCache)
        {
        }
        //</suite-custom-code-autogenerated>

        //Write your custom code...
        [AllowAnonymous]
        public virtual async Task<MobileResponseDto> RegisterAsync(RegisterCreateDto input)
        {
            var user = await _userProfileManager.CreatWithDetialsAsync(input.FirstName, input.LastName, input.PhoneNumber, input.Email, input.Password, input.BiologicalSex, input.DateOfBirth, input.Latitude, input.Longitude);
            return ObjectMapper.Map<MobileResponse, MobileResponseDto>(user);
        }

        [AllowAnonymous]
        public virtual async Task<MobileResponseDto> VerifySecurityCodeAsync(SecurityNumberCreateDto input)
        {
            return null;
        }


        [AllowAnonymous]
        public virtual async Task<MobileResponseDto> ResendSecurityCodeAsync(SecurityNumberCreateDto input)
        {
            return null;
            //var registeredUser = await _userManager.RegisterUserAsync(input.FirstName, input.LastName, input.PhoneNumber, input.Email);
            //return ObjectMapper.Map<IdentityUser, RegisterDto>(registeredUser);
        }


    }
}