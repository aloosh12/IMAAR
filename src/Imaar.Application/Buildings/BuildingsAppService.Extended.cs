using Imaar.Shared;
using Imaar.SecondaryAmenities;
using Imaar.MainAmenities;
using Imaar.ServiceTypes;
using Imaar.BuildingFacades;
using Imaar.FurnishingLevels;
using Imaar.Regions;
using System;
using System.IO;
using System.Linq;
using System.Collections.Generic;
using System.Threading.Tasks;
using System.Linq.Dynamic.Core;
using Microsoft.AspNetCore.Authorization;
using Volo.Abp;
using Volo.Abp.Application.Dtos;
using Volo.Abp.Application.Services;
using Volo.Abp.Domain.Repositories;
using Imaar.Permissions;
using Imaar.Buildings;
using MiniExcelLibs;
using Volo.Abp.Content;
using Volo.Abp.Authorization;
using Volo.Abp.Caching;
using Microsoft.Extensions.Caching.Distributed;
using Imaar.Shared;

namespace Imaar.Buildings
{
    public class BuildingsAppService : BuildingsAppServiceBase, IBuildingsAppService
    {
        //<suite-custom-code-autogenerated>
        public BuildingsAppService(IBuildingRepository buildingRepository, BuildingManager buildingManager, IDistributedCache<BuildingDownloadTokenCacheItem, string> downloadTokenCache, IRepository<Imaar.Regions.Region, Guid> regionRepository, IRepository<Imaar.FurnishingLevels.FurnishingLevel, Guid> furnishingLevelRepository, IRepository<Imaar.BuildingFacades.BuildingFacade, Guid> buildingFacadeRepository, IRepository<Imaar.ServiceTypes.ServiceType, Guid> serviceTypeRepository, IRepository<Imaar.MainAmenities.MainAmenity, Guid> mainAmenityRepository, IRepository<Imaar.SecondaryAmenities.SecondaryAmenity, Guid> secondaryAmenityRepository)
            : base(buildingRepository, buildingManager, downloadTokenCache, regionRepository, furnishingLevelRepository, buildingFacadeRepository, serviceTypeRepository, mainAmenityRepository, secondaryAmenityRepository)
        {
        }
        //</suite-custom-code-autogenerated>

        //Write your custom code...
    }
}